:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, fallback, font, applyOpacity;
}

:import {
    -st-from: "wix-ui-core/index.st.css";
    -st-named: RadioButton;
}

:import {
    -st-from: "../../common/palette.st.css";
    -st-named: errorColor;
}

/*Defaults*/
:vars {
    DefaultTextColor: color-5;
    DefaultBorderColor: color-5;
    DefaultIconColor: color-8;
    DefaultBackgroundColor:color-1;
    DisabledColor: gray;
}

/*Overrides*/
:vars {
    TextColor: --overridable;
    BorderColor: --overridable;
    IconColor:  --overridable;
    BackgroundColor:--overridable;
}

:vars {
    CurrentBorderColor: color(fallback(value(BorderColor), value(DefaultBorderColor)));
    CurrentIconColor: color(fallback(value(IconColor), value(DefaultIconColor)));
    CurrentTextColor: color(fallback(value(TextColor), value(DefaultTextColor)));
    CurrentBackgroundColor: color(fallback(value(BackgroundColor), value(DefaultBackgroundColor)));
    LabelTextFont: "{theme: 'Body-M', size: '16px', lineHeight: '1.5em'}";
}

.labelWrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

.root {
    -st-extends: RadioButton;
    -st-states: checked, disabled, box, error;
    display: flex;
    line-height: 20px;
}

.root:error .checkmark {
    border-color: color(value(errorColor));
}

.root:box:disabled {
    cursor: default;
}

.root:box:hover, .root:box:focus-within {
    border-color: applyOpacity(value(CurrentBorderColor), 1);
}

.root:box.disabled:hover:not(:checked), .root:box:disabled:focus-within:not(:checked) {
    border-color: applyOpacity(value(CurrentBorderColor), 0.6);
}

.root:box:checked {
    background-color: applyOpacity(value(CurrentIconColor), 0.1);
    border-color: value(CurrentIconColor);
}

.root:box:checked:not(:disabled):hover, .root:box:checked:not(:disabled):focus-within {
    border-color: applyOpacity(value(CurrentIconColor), 0.6);
}

.root:box:not(:disabled):hover .icon {
    border-color: applyOpacity(value(CurrentBorderColor), 1);
}

.root::label {
    width: 100%;
    font: font(value(LabelTextFont));
    color: applyOpacity(value(CurrentTextColor),1);
}

.root::icon {
    display: flex;
    position: relative;
    margin-bottom: 1px;
    top:3px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.root::icon:before {
    content: '';
    width: 35px;
}

.checkmark {
    position: absolute;
    top: 0;
    background-color: transparent;
    left: 0;
    right: 0;
    height: 16px;
    border-radius: 50%;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 20px;
    border: 1px solid applyOpacity(value(CurrentBorderColor), 0.6);
}

.innerCheck {
    margin: 2px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    transform: scale(0.5);
    opacity: 0;
    transition: transform .2s ease-in-out, opacity .2s ease-in-out;
}


.root:box {
    display: flex;
    padding: 16px;
    margin-bottom: 23px;
    background-color:applyOpacity(value(DefaultBackgroundColor),1);
    border: 1px solid applyOpacity(value(CurrentBorderColor), 0.6);
    cursor: pointer;
    box-sizing: border-box;
}

.label.suffixed {
    flex: 1;
    white-space: nowrap;
    display: flex;
}

.label.suffixed:after {
    content: '';
    width: 5px;
}

.suffix {
    flex: 0;
}

/* Create the indicator (the dot/circle - hidden when not checked) */

.root:hover .checkmark {
    border-color: applyOpacity(value(CurrentBorderColor), 1);
}

.root:checked .innerCheck {
    opacity: 1;
    background-color: value(CurrentIconColor);
    transform: scale(1);
}

/* Show the indicator (dot/circle) when checked */

.root:disabled {
    color: color(value(DisabledColor));
}


.root:disabled .checkmark {
    border-color: color(value(DisabledColor));
}
