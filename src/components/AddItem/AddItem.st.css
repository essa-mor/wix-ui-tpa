:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, applyOpacity, fallback, font;
}

:import {
    -st-from: "../../common/palette.st.css";
    -st-named: errorColor;
}

:import {
    -st-from: "wix-style-react/dist/src/AddItem/AddItem.st.css";
    -st-default: AddItem;
}

:import {
    -st-from: "wix-style-react/dist/src/Text/Text.st.css";
    -st-default: Text;
}

/*Defaults*/
:vars {
    DefaultBorderColor: color-8;
    DefaultBackgroundColor: color-1;
    DefaultTextColor: color-8;

    DisabledBorderColor: color-3;
    DisabledBackgroundColor: color-1;
    DisabledTextColor: color-3;
}

/*Overrides*/
:vars {
    BorderColor: --overridable;
    BackgroundColor: --overridable;
    TextColor: --overridable;
}

/*Fallbacks*/
:vars {
    CurrentBorderColor: color(fallback(value(BorderColor), value(DefaultBorderColor)));
    CurrentBackgroundColor: color(fallback(value(BackgroundColor), value(DefaultBackgroundColor)));
    CurrentTextColor: color(fallback(value(TextColor), value(DefaultTextColor)));
}

.root {
    -st-extends: AddItem;
    -st-states: hasError;
}

.root:theme(dashes) {
    border: dashed 1px value(CurrentBorderColor);
    background-color: value(CurrentBackgroundColor);
    color: value(CurrentTextColor);
}

.root:theme(dashes):hover {
    background-color: applyOpacity(value(CurrentBackgroundColor), 0.1);
    border: dashed 1px applyOpacity(value(CurrentBorderColor), 0.6);
}

.root:theme(dashes):active {
    background-color: value(CurrentBackgroundColor);
}

.root:hasError {
    background-color: #FFFFFF;
    border: dashed 1px value(errorColor);
    color: value(errorColor);
    opacity: 1;
}

.root:hasError:not(:disabled):theme(dashes):hover,
.root:not(:disabled):focus-visible:theme(dashes):hasError {
    background-color: applyOpacity(value(errorColor), 0.1);
    border: dashed 1px applyOpacity(value(errorColor), 0.6);
    color: value(errorColor);
}

.root:theme(dashes):disabled {
    background-color: color(value(DisabledBackgroundColor));
    color: color(value(DisabledTextColor));
    border: dashed 1px color(value(DisabledBorderColor));
    opacity: 1;
}

/* Remove WSR focus, opacity is just for now */
.root:not(:disabled):focus-visible:theme(dashes) {
    box-shadow: none;
    border: dashed 1px value(CurrentBorderColor);
    background-color: applyOpacity(value(CurrentBackgroundColor), 0.1);
}

.root::text Text {
    color: value(CurrentTextColor);
    font: value(font("{theme: 'Body-M', size: '14px', lineHeight: '24px'}"));
}

/* Is not working */
.root:hasError::text Text {
    color: value(errorColor);
    font: value(font("{theme: 'Body-M', size: '14px', lineHeight: '24px'}"));
}

.root:disabled::text Text {
    color: color(value(DisabledTextColor));
    font: value(font("{theme: 'Body-M', size: '14px', lineHeight: '24px'}"));
}
